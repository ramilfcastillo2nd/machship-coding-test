[9:33 AM] Ben Suryn
    The following task is to be completed as much as possible within  2.5 hours. The alotted time is 3 hours however we will spend the last 30 minutes going through the solution with you. If you cannot finish the task within the 2.5 hours, thats ok, get through the solution as best you can and after the time we can discuss what is remaining, what the next steps are, etc.Please read the below task and if you have any questions or concerns, please write them into the chat of the teams meeting that we have setup. We will send you a message 15 minutes into the challenge to see how you are going and see if you have any clarifications / questions to help you with the solution.Do not be afraid to reach out if you need a hand or clarification.**C# task:**
* Create a net core Webapi project that has an API endpoint called retrieveUsers. 
    * This endpoint takes a List<string> usernames: This is an list of github usernames that will be used to look up basic information from GitHub's public API. Only users in this list should be retrieved from Github.
    * The endpoint should take these usernames and hit GitHub's public API to get basic user information
* This API call returns to the user a list of basic information for those users including:
    * name
    * login
    * company
    * number of followers
    * number of public repositories
    * The average number of followers per public repository (ie. number of followers divided by the number of public repositories)
* The returned users should be sorted alphabetically by name
* If duplicate usernames are provided, you should not hit github multiple times and the matching user should only be returned once 
* If some usernames cannot be found, this should not fail the other usernames that were requested
* Use regular http calls to hit GitHub's API, don't use any pre made GitHub net core libraries to integrate with GitHub's API
* The API endpoint (with documentation) needed to get Github user information is https://docs.github.com/en/rest/reference/users#get-a-user
* Treat this project like it was going into production. Time permitting, include tests and error handling for your logic
* Submit the code into a repository in GitHub for review
